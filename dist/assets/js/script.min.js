//
// index.js
//
"use strict";var MYEJSPROJECT={};MYEJSPROJECT={init:function(){MYEJSPROJECT.os=MYEJSPROJECT.checkDevice(),MYEJSPROJECT.ww=$(window).width(),MYEJSPROJECT.wh=$(window).height(),MYEJSPROJECT.st=0,$(function(){MYEJSPROJECT.bind()}),$(window).on("load",function(){}).on("scroll touchmove",function(o){})},bind:function(){MYEJSPROJECT.smoothScroll.init()},checkDevice:function(){var o=window.navigator.userAgent.toLowerCase();return o.indexOf("iphone")!=-1?"iphone":null}},MYEJSPROJECT.init(),MYEJSPROJECT.smoothScroll={offsetY:-10,time:500,init:function(){$('a[href^="#"]').length&&MYEJSPROJECT.smoothScroll.bind()},bind:function(){$('a[href^="#"]').click(function(){var o=$(this.hash);if(o.length){var t=o.offset().top+MYEJSPROJECT.smoothScroll.offsetY;return $("html,body").animate({scrollTop:t},MYEJSPROJECT.smoothScroll.time,"easeOutQuad"),window.history.pushState(null,null,this.hash),!1}})},_smoothScroll:function(o){if(o.length){var t=o.offset().top+MYEJSPROJECT.smoothScroll.offsetY;return $("html,body").animate({scrollTop:t},MYEJSPROJECT.smoothScroll.time,"easeOutQuad"),!1}}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc3QvYXNzZXRzL2pzL3NjcmlwdC5qcyJdLCJuYW1lcyI6WyJNWUVKU1BST0pFQ1QiLCJpbml0Iiwib3MiLCJjaGVja0RldmljZSIsInd3IiwiJCIsIndpbmRvdyIsIndpZHRoIiwid2giLCJoZWlnaHQiLCJzdCIsImJpbmQiLCJvbiIsImUiLCJzbW9vdGhTY3JvbGwiLCJ1IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidG9Mb3dlckNhc2UiLCJpbmRleE9mIiwib2Zmc2V0WSIsInRpbWUiLCJsZW5ndGgiLCJjbGljayIsInRhcmdldCIsInRoaXMiLCJoYXNoIiwidGFyZ2V0WSIsIm9mZnNldCIsInRvcCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJoaXN0b3J5IiwicHVzaFN0YXRlIiwiX3Ntb290aFNjcm9sbCJdLCJtYXBwaW5ncyI6Ijs7O0FBSUEsWUFFQSxJQUFJQSxnQkFFSkEsZUFFRUMsS0FBTyxXQUVMRCxhQUFhRSxHQUFLRixhQUFhRyxjQUMvQkgsYUFBYUksR0FBS0MsRUFBRUMsUUFBUUMsUUFDNUJQLGFBQWFRLEdBQUtILEVBQUVDLFFBQVFHLFNBQzVCVCxhQUFhVSxHQUFLLEVBRWxCTCxFQUFFLFdBQ0FMLGFBQWFXLFNBR2ZOLEVBQUVDLFFBQ0NNLEdBQUcsT0FBUSxjQUVYQSxHQUFHLG1CQUFvQixTQUFTQyxPQUtyQ0YsS0FBTyxXQUNMWCxhQUFhYyxhQUFhYixRQU01QkUsWUFBYyxXQUNaLEdBQUlZLEdBQUlULE9BQU9VLFVBQVVDLFVBQVVDLGFBQ25DLE9BQUdILEdBQUVJLFFBQVEsY0FBMEIsU0FDekIsT0E2QmxCbkIsYUFBYUMsT0EyQmJELGFBQWFjLGNBRVhNLFlBQ0FDLEtBQU8sSUFFUHBCLEtBQU8sV0FDRkksRUFBRSxnQkFBZ0JpQixRQUFRdEIsYUFBYWMsYUFBYUgsUUFHekRBLEtBQU8sV0FDTE4sRUFBRSxnQkFBZ0JrQixNQUFNLFdBRXRCLEdBQUlDLEdBQVNuQixFQUFFb0IsS0FBS0MsS0FDcEIsSUFBS0YsRUFBT0YsT0FBWixDQUVBLEdBQUlLLEdBQVVILEVBQU9JLFNBQVNDLElBQUk3QixhQUFhYyxhQUFhTSxPQU01RCxPQUpBZixHQUFFLGFBQWF5QixTQUFTQyxVQUFXSixHQUFVM0IsYUFBYWMsYUFBYU8sS0FBTSxlQUU3RWYsT0FBTzBCLFFBQVFDLFVBQVUsS0FBTSxLQUFNUixLQUFLQyxPQUVuQyxNQUtYUSxjQUFnQixTQUFTVixHQUN2QixHQUFLQSxFQUFPRixPQUFaLENBQ0EsR0FBSUssR0FBVUgsRUFBT0ksU0FBU0MsSUFBSTdCLGFBQWFjLGFBQWFNLE9BRTVELE9BREFmLEdBQUUsYUFBYXlCLFNBQVNDLFVBQVdKLEdBQVUzQixhQUFhYyxhQUFhTyxLQUFNLGdCQUN0RSIsImZpbGUiOiJkaXN0L2Fzc2V0cy9qcy9zY3JpcHQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9cbi8vIGluZGV4LmpzXG4vL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBNWUVKU1BST0pFQ1QgPSB7fTtcblxuTVlFSlNQUk9KRUNUID0ge1xuXG4gIGluaXQgOiBmdW5jdGlvbigpe1xuXG4gICAgTVlFSlNQUk9KRUNULm9zID0gTVlFSlNQUk9KRUNULmNoZWNrRGV2aWNlKCk7XG4gICAgTVlFSlNQUk9KRUNULnd3ID0gJCh3aW5kb3cpLndpZHRoKCk7XG4gICAgTVlFSlNQUk9KRUNULndoID0gJCh3aW5kb3cpLmhlaWdodCgpO1xuICAgIE1ZRUpTUFJPSkVDVC5zdCA9IDA7XG5cbiAgICAkKGZ1bmN0aW9uKCl7XG4gICAgICBNWUVKU1BST0pFQ1QuYmluZCgpO1xuICAgIH0pO1xuXG4gICAgJCh3aW5kb3cpXG4gICAgICAub24oJ2xvYWQnLCBmdW5jdGlvbigpIHtcbiAgICAgIH0pXG4gICAgICAub24oJ3Njcm9sbCB0b3VjaG1vdmUnLCBmdW5jdGlvbihlKSB7XG4gICAgICB9KTtcblxuICB9LFxuXG4gIGJpbmQgOiBmdW5jdGlvbigpIHtcbiAgICBNWUVKU1BST0pFQ1Quc21vb3RoU2Nyb2xsLmluaXQoKTtcbiAgfSxcblxuICAvL1xuICAvLyBjaGVjayBkZXZpY2VcbiAgLy9cbiAgY2hlY2tEZXZpY2UgOiBmdW5jdGlvbigpe1xuICAgIHZhciB1ID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKTtcbiAgICBpZih1LmluZGV4T2YoXCJpcGhvbmVcIikgIT0gLTEpIHsgcmV0dXJuICdpcGhvbmUnIH1cbiAgICBlbHNlIHsgcmV0dXJuIG51bGwgfVxuICAgIC8vIHZhciBfdWEgPSAoZnVuY3Rpb24odSl7XG4gICAgICAvLyByZXR1cm4ge1xuICAgICAgLy8gICBUYWJsZXQ6KHUuaW5kZXhPZihcIndpbmRvd3NcIikgIT0gLTEgJiYgdS5pbmRleE9mKFwidG91Y2hcIikgIT0gLTEgJiYgdS5pbmRleE9mKFwidGFibGV0IHBjXCIpID09IC0xKVxuICAgICAgLy8gICAgIHx8IHUuaW5kZXhPZihcImlwYWRcIikgIT0gLTFcbiAgICAgIC8vICAgICB8fCAodS5pbmRleE9mKFwiYW5kcm9pZFwiKSAhPSAtMSAmJiB1LmluZGV4T2YoXCJtb2JpbGVcIikgPT0gLTEpXG4gICAgICAvLyAgICAgfHwgKHUuaW5kZXhPZihcImZpcmVmb3hcIikgIT0gLTEgJiYgdS5pbmRleE9mKFwidGFibGV0XCIpICE9IC0xKVxuICAgICAgLy8gICAgIHx8IHUuaW5kZXhPZihcImtpbmRsZVwiKSAhPSAtMVxuICAgICAgLy8gICAgIHx8IHUuaW5kZXhPZihcInNpbGtcIikgIT0gLTFcbiAgICAgIC8vICAgICB8fCB1LmluZGV4T2YoXCJwbGF5Ym9va1wiKSAhPSAtMSxcbiAgICAgIC8vICAgTW9iaWxlOih1LmluZGV4T2YoXCJ3aW5kb3dzXCIpICE9IC0xICYmIHUuaW5kZXhPZihcInBob25lXCIpICE9IC0xKVxuICAgICAgLy8gICAgIHx8IHUuaW5kZXhPZihcImlwaG9uZVwiKSAhPSAtMVxuICAgICAgLy8gICAgIHx8IHUuaW5kZXhPZihcImlwb2RcIikgIT0gLTFcbiAgICAgIC8vICAgICB8fCAodS5pbmRleE9mKFwiYW5kcm9pZFwiKSAhPSAtMSAmJiB1LmluZGV4T2YoXCJtb2JpbGVcIikgIT0gLTEpXG4gICAgICAvLyAgICAgfHwgKHUuaW5kZXhPZihcImZpcmVmb3hcIikgIT0gLTEgJiYgdS5pbmRleE9mKFwibW9iaWxlXCIpICE9IC0xKVxuICAgICAgLy8gICAgIHx8IHUuaW5kZXhPZihcImJsYWNrYmVycnlcIikgIT0gLTFcbiAgICAgIC8vIH1cbiAgICAvLyB9KSh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpKTtcbiAgICAvLyBpZihfdWEuVGFibGV0KXtcbiAgICAvLyAgIHJldHVybiAndGFibGV0J1xuICAgIC8vIH0gZWxzZSBpZihfdWEuTW9iaWxlKXtcbiAgICAvLyAgIHJldHVybiAnc3AnO1xuICAgIC8vIH0gZWxzZSB7XG4gICAgLy8gICByZXR1cm4gJ3BjJztcbiAgICAvLyB9XG4gIH0sXG5cbn1cblxuTVlFSlNQUk9KRUNULmluaXQoKTtcblxuLy8gICAgXCJQUk9URUNUIEFMTCBDQVRTXCJcbi8vICAgICAgICAgICDiiKdfX1/iiKdcbi8vICAgICAgICAgIC9fX19fX1xcXG4vLyAgICAgX19fX1tcXOODu8+J44O7L11fX19fXG4vLyAgICAvXFwgI1xcIFxcX00gWV8vIC8jIC9cXFxuLy8gICAvICBcXCMgXFxfLi0tLS5fLyAjLyAgXFxcbi8vICAvICAgL3xcXCAgfCBFIHwgIC98XFwgICBcXFxuLy8gL19fXy8gfCB8IHwgSiB8IHwgfCBcXF9fX1xcXG4vLyB8ICB8ICB8IHwgfC1TLXwgfCB8ICB8ICB8XG4vLyB8X198ICBcXF98IHxfI198IHxfLyAgfF9ffFxuLy8gLy9cXFxcICA8XFwgXy8vXlxcXFxfIC8+ICAvL1xcXFxcbi8vIFxcfHwvICB8XFwvLy8vIFxcXFxcXFxcL3wgIFxcfHwvXG4vLyAgICAgICB8ICAgfCAgIHwgICB8XG4vLyAgICAgICB8LS0tfCAgIHwtLS18XG4vLyAgICAgICB8LS0tfCAgIHwtLS18XG4vLyAgICAgICB8ICAgfCAgIHwgICB8XG4vLyAgICAgICB8X19ffCAgIHxfX198XG4vLyAgICAgICAvICAgXFwgICAvICAgXFxcbi8vICAgICAgfF9fX19ffCB8X19fX198XG4vLyAgICAgIHxISEhISHwgfEhISEhIfFxuLy8gICAgMjAxNi4xMS4yMSBAdXVubmVlXG4vL1xuLy8gc21vb3RoIHNjcm9sbCAoIHNhbXBsZSApXG4vL1xuXG5NWUVKU1BST0pFQ1Quc21vb3RoU2Nyb2xsID0ge1xuXG4gIG9mZnNldFkgOiAtMTAsIC8vIOOCueOCr+ODreODvOODq+OBruOCquODleOCu+ODg+ODiOWApFxuICB0aW1lIDogNTAwLCAvLyDjgrnjgq/jg63jg7zjg6vjgavjgYvjgYvjgovmmYLplpNcblxuICBpbml0IDogZnVuY3Rpb24oKSB7XG4gICAgaWYoJCgnYVtocmVmXj1cIiNcIl0nKS5sZW5ndGgpIE1ZRUpTUFJPSkVDVC5zbW9vdGhTY3JvbGwuYmluZCgpO1xuICB9LFxuXG4gIGJpbmQgOiBmdW5jdGlvbigpIHtcbiAgICAkKCdhW2hyZWZePVwiI1wiXScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgLy8g56e75YuV5YWI44Go44Gq44KL6KaB57Sg44KS5Y+W5b6XXG4gICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzLmhhc2gpO1xuICAgICAgaWYgKCF0YXJnZXQubGVuZ3RoKSByZXR1cm4gO1xuICAgICAgLy8g56e75YuV5YWI44Go44Gq44KL5YCkXG4gICAgICB2YXIgdGFyZ2V0WSA9IHRhcmdldC5vZmZzZXQoKS50b3ArTVlFSlNQUk9KRUNULnNtb290aFNjcm9sbC5vZmZzZXRZO1xuICAgICAgLy8g44K544Kv44Ot44O844Or44Ki44OL44Oh44O844K344On44OzXG4gICAgICAkKCdodG1sLGJvZHknKS5hbmltYXRlKHtzY3JvbGxUb3A6IHRhcmdldFl9LCBNWUVKU1BST0pFQ1Quc21vb3RoU2Nyb2xsLnRpbWUsICdlYXNlT3V0UXVhZCcpO1xuICAgICAgLy8g44OP44OD44K344Ol5pu444GN5o+b44GI44Go44GPXG4gICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgbnVsbCwgdGhpcy5oYXNoKTtcbiAgICAgIC8vIOODh+ODleOCqeODq+ODiOOBruWHpueQhuOBr+OCreODo+ODs+OCu+ODq1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pO1xuICB9LFxuXG4gIC8vIGpz44GL44KJ55u05o6l44GX44Gm44GE55SoXG4gIF9zbW9vdGhTY3JvbGwgOiBmdW5jdGlvbih0YXJnZXQpIHtcbiAgICBpZiAoIXRhcmdldC5sZW5ndGgpIHJldHVybiA7XG4gICAgdmFyIHRhcmdldFkgPSB0YXJnZXQub2Zmc2V0KCkudG9wK01ZRUpTUFJPSkVDVC5zbW9vdGhTY3JvbGwub2Zmc2V0WTtcbiAgICAkKCdodG1sLGJvZHknKS5hbmltYXRlKHtzY3JvbGxUb3A6IHRhcmdldFl9LCBNWUVKU1BST0pFQ1Quc21vb3RoU2Nyb2xsLnRpbWUsICdlYXNlT3V0UXVhZCcpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcblxufSJdfQ==
